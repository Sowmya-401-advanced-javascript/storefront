[{"/home/sowmya/codefellows/401/storefront/myapp/src/index.js":"1","/home/sowmya/codefellows/401/storefront/myapp/src/App.js":"2","/home/sowmya/codefellows/401/storefront/myapp/src/components/Footer.js":"3","/home/sowmya/codefellows/401/storefront/myapp/src/components/Header.js":"4","/home/sowmya/codefellows/401/storefront/myapp/src/components/categories.js":"5","/home/sowmya/codefellows/401/storefront/myapp/src/store/index.js":"6","/home/sowmya/codefellows/401/storefront/myapp/src/components/ProductComponents.js":"7","/home/sowmya/codefellows/401/storefront/myapp/src/store/products-reducer.js":"8"},{"size":314,"mtime":1611639491090,"results":"9","hashOfConfig":"10"},{"size":369,"mtime":1611715178360,"results":"11","hashOfConfig":"10"},{"size":278,"mtime":1611639491080,"results":"12","hashOfConfig":"10"},{"size":944,"mtime":1611699536350,"results":"13","hashOfConfig":"10"},{"size":2105,"mtime":1611714774610,"results":"14","hashOfConfig":"10"},{"size":554,"mtime":1611710231330,"results":"15","hashOfConfig":"10"},{"size":3218,"mtime":1611714925270,"results":"16","hashOfConfig":"10"},{"size":2037,"mtime":1611715669010,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"lknqa3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/home/sowmya/codefellows/401/storefront/myapp/src/index.js",[],["38","39"],"/home/sowmya/codefellows/401/storefront/myapp/src/App.js",[],"/home/sowmya/codefellows/401/storefront/myapp/src/components/Footer.js",[],"/home/sowmya/codefellows/401/storefront/myapp/src/components/Header.js",[],"/home/sowmya/codefellows/401/storefront/myapp/src/components/categories.js",["40"],"import React from 'react';\nimport Products from './ProductComponents';\nimport { connect } from 'react-redux';\nimport { selectCategory, /*updateProducts,*/ reset } from '../store/products-reducer';\nimport { Typography } from '@material-ui/core';\n\nconst mapDispatchToProps = { selectCategory, /*updateProducts,*/ reset };\n\nfunction Categories(props) {\n\n    const showCategory = (category) => {\n        console.log('Show Category', category);\n        props.selectCategory(category);\n        // props.updateProducts(category);\n    }\n\n    const reset = () => {\n        props.reset();\n    }\n\n    console.log('CATEGORIES Active: ', props.active, 'Categories: ', props.categories);\n\n\n    return (\n        <div>\n            <section id='categories'>\n                <Typography variant='h4'>Browse Our Categories</Typography>\n                <Typography variant='h6' id='Electronics' onClick={reset}>Home</Typography>\n                {(props.active === 'Electronics' || props.active === '') ?\n                    <div>\n                        <Typography variant='h6' id='Electronics' onClick={() => showCategory('Electronics')}>Electronics</Typography>\n                    </div> : ''\n                }\n                {(props.active === 'Clothing' || props.active === '') ?\n                    <div>\n                        <Typography variant='h6' id='Clothing' onClick={() => showCategory('Clothing')}>Clothing</Typography>\n                    </div> : ''\n                }\n                  {(props.active === 'Food' || props.active === '') ?\n                    <div>\n                        <Typography variant='h6' id='Food' onClick={() => showCategory('Food')}>Food</Typography>\n                    </div> : ''\n                }\n            </section>\n            <section id=\"Products\">\n                <Products />\n\n            </section>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    categories: state.products.categories,\n    active: state.products.activeCategory,\n    categories: state.products.categories\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","/home/sowmya/codefellows/401/storefront/myapp/src/store/index.js",[],"/home/sowmya/codefellows/401/storefront/myapp/src/components/ProductComponents.js",["41"],"// import React, { useEffect } from 'react';\nimport { Button /*CardMedia*/ } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { selectCategory, /*updateProducts,*/ reset } from '../store/products-reducer';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\nconst mapDispatchToProps = { selectCategory, /*updateProducts,*/ reset };\n\nfunction Products(props) {\n    console.log('Props on Products: ', 'Active Category ', props.activeCategory, 'Products: ', props.products, 'State.......!', props.state.products);\n\n    const classes = useStyles();\n\n    return (\n        <div id=\"productDetail\">\n            {props.products.map((product, idx) => (\n                (product.category !== props.activeCategory) ? '' :\n                    <section key={idx}>\n                        {/* <card className={classes.root}> */}\n                            {/* <CardActionArea> */}\n                                {/* <CardMedia */}\n                                    title={product.itemName}\n                                {/* /> */}\n                                {/* <CardContent> */}\n                                    <Typography variant=\"h5\" component=\"h2\">\n                                        {product.itemName}\n                                    </Typography>\n                                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {product.Description}\n                                    </Typography> */}\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        ${product.Price}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                        {product.inStock} In Stock!\n                                    </Typography>\n                                {/* </CardContent> */}\n                                {/* <CardActions> */}\n                                    <Button size=\"small\" color=\"primary\">\n                                        Add to Cart\n                                    </Button>\n                                    <Button size=\"small\" color=\"primary\">\n                                        Buy!\n                                    </Button>\n                                {/* </CardActions> */}\n                            {/* </CardActionArea> */}\n                        {/* </card> */}\n                    </section>\n            ))}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    state,\n    activeCategory: state.products.activeCategory,\n    products: state.products.products,\n    categories: state.products.categories\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","/home/sowmya/codefellows/401/storefront/myapp/src/store/products-reducer.js",["42","43","44"],"let initialState = {\n    categories: [\n      { itemName: 'electronics', displayName: 'Elecronics' },\n      { itemName: 'food', displayName: 'Food' },\n      { itemName: 'clothing', displayName: 'Clothing' },\n    ],\n    products: [\n      { itemName: 'TV', Category: 'Electronics', Price: 699.00, inStock: 5 },\n      { itemName: 'Radio', Category: 'Electronics', Price: 99.00, inStock: 15 },\n      { itemName: 'Shirt', Category: 'Clothing', Price: 9.00, inStock: 25 },\n      { itemName: 'Socks', Category: 'Clothing', Price: 12.00, inStock: 10 },\n      { itemName: 'Apples', Category: 'Food', Price: .99, inStock: 500 },\n      { itemName: 'Eggs', Category: 'Food', Price: 1.99, inStock: 12 },\n      { itemName: 'Bread', Category: 'Food', Price: 2.39, inStock: 90 },\n    ],\n    activeCategory: ''\n};\n\nexport const selectCategory = (category) => {\n    return {\n        type: 'SELECTCATEGORY',\n        payload: category\n    }\n}\n\n// export const updateProducts = (category) => {\n//     return {\n//         type: 'UPDATEPRODUCTS',\n//         payload: category\n//     }\n// }\n\nexport const reset = () => {\n    return {\n        type: 'RESET'\n    }\n}\n\nconst categoryReducer = (state=initialState, action) => {\n    let { type, payload } = action;\n    switch(type) {\n        case 'SELECTCATEGORY':\n            console.log('Type_________', type);\n            console.log('CATEGORY REDUCER', initialState);\n            console.log('Payload', payload);\n            return{...state, activeCategory: payload};\n\n        case 'UPDATEPRODUCTS':\n            let updatedProducts = state.products.map(product => {\n                if(product.category === payload){\n                    \n                    return{...state.updatedProducts, activeCategory: payload};       //return product         \n                    \n                }\n            });\n            //return updated products ...state, state.updatedProducts\n\n        case 'RESET':\n            return initialState;\n\n        default:\n            return state;\n    }\n}\n\nexport default categoryReducer;\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":56,"column":5,"nodeType":"51","messageId":"52","endLine":56,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":25,"column":11,"nodeType":"55","messageId":"56","endLine":25,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":49,"column":17,"nodeType":"55","messageId":"56","endLine":49,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":49,"column":62,"nodeType":"60","messageId":"61","endLine":49,"endColumn":64},{"ruleId":"62","severity":1,"message":"63","line":58,"column":9,"nodeType":"64","messageId":"65","endLine":59,"endColumn":33},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-dupe-keys","Duplicate key 'categories'.","ObjectExpression","unexpected","no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'updatedProducts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation"]